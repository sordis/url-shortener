---
name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
          cache: true
          cache-dependency-path: go.mod

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc musl-dev sqlite3

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.58.2
          golangci-lint --version

      - name: Run linters
        run: golangci-lint run --timeout=5m ./...

      - name: Verify configs
        run: |
          echo "Config files:"
          ls -la config/
          [ -f config/prod.yml ] || exit 1

      - name: Run unit tests with coverage
        env:
          AUTH_PASS: ${{ secrets.AUTH_PASS || 'test_password_ci' }}
        run: |
          go test -coverprofile=coverage.out -covermode=atomic $(go list ./... | grep -v "/tests")
          go tool cover -func=coverage.out | grep total

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.out
          flag-name: unittests

      - name: Get coverage percentage
        id: coverage
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
          echo "COVERAGE=${COVERAGE}" >> $GITHUB_OUTPUT

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Run integration tests
        env:
          AUTH_PASS: ${{ secrets.AUTH_PASS || 'test_password_ci' }}
          CONFIG_PATH: "config/prod.yml"
        run: |
          mkdir -p storage
          touch storage/storage.db
          chmod 666 storage/stor
