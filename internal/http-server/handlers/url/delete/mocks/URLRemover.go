// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package delete

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockURLRemover creates a new instance of MockURLRemover. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockURLRemover(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockURLRemover {
	mock := &MockURLRemover{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockURLRemover is an autogenerated mock type for the URLRemover type
type MockURLRemover struct {
	mock.Mock
}

type MockURLRemover_Expecter struct {
	mock *mock.Mock
}

func (_m *MockURLRemover) EXPECT() *MockURLRemover_Expecter {
	return &MockURLRemover_Expecter{mock: &_m.Mock}
}

// DeleteURL provides a mock function for the type MockURLRemover
func (_mock *MockURLRemover) DeleteURL(alias string) error {
	ret := _mock.Called(alias)

	if len(ret) == 0 {
		panic("no return value specified for DeleteURL")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(string) error); ok {
		r0 = returnFunc(alias)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockURLRemover_DeleteURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteURL'
type MockURLRemover_DeleteURL_Call struct {
	*mock.Call
}

// DeleteURL is a helper method to define mock.On call
//   - alias string
func (_e *MockURLRemover_Expecter) DeleteURL(alias interface{}) *MockURLRemover_DeleteURL_Call {
	return &MockURLRemover_DeleteURL_Call{Call: _e.mock.On("DeleteURL", alias)}
}

func (_c *MockURLRemover_DeleteURL_Call) Run(run func(alias string)) *MockURLRemover_DeleteURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockURLRemover_DeleteURL_Call) Return(err error) *MockURLRemover_DeleteURL_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockURLRemover_DeleteURL_Call) RunAndReturn(run func(alias string) error) *MockURLRemover_DeleteURL_Call {
	_c.Call.Return(run)
	return _c
}
